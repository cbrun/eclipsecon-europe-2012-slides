15 projets / 25 min
1min30 par projet => 3  slides par projet  30 sec par slide
Scope/Intro
 - Nom
 - URL
 - Download/compat
Example 
 - Usage
Feedback
 - Pitfals

Liste des projets candidats :
sûr : 

h2. ecoretool

http://download.eclipse.org/releases/juno
Intro  : graphical modeling environment for Ecore, graphical modeler, views for type hierarchies.
Example : domain model for Choco commits. Describe the data
diag général, vues
Feedback :
stable "so so", project in need of love and new commiters and team. Good enough if you're into graphical modeling.

h2. xcore

http://download.eclipse.org/releases/juno
Intro : Textual syntax + complete editing environement + strong Java binding
Example : define the Choco domain we've seen before + easy to define the behavior.
Feedback :
Complete (rich) and nice editing environment, automatic generation of the code.
A few lags here and there (sometime) which create frustrations.
See Ed's talk for more  !


h2. emfpath

http://svn.codespot.com/a/eclipselabs.org/emfpath/trunk/repository/
Intro : Generic API binding EMF and Guava, specific generation
Java API for declarative model transformation.
Example :
A bunch of readable Java queries.
Feedback:
Not much, but not much cost. Makes your EMF model's browsing really nice.
Might lead to many instanciations, beware in critical portions of your code!

h2.  eef

http://download.eclipse.org/releases/juno
Intro : EMF Edit on steroids, model driven approach with generation of rich property views and editors.
Example :
RCP-like editor for the Choco model.
Feedback :
A sexier editor is a few clicks from you.
Too much code get generated.


h2.  wikitext bridge (Mylyn Intent)

Intro : Transform a .textile or other wiki syntaxes into an EMF Model. Resource implementation for wikimedia API. 
Example :
Retrieve docs from several Eclipse wiki pages, aggregates them and generate HTML from this. Standalone. 
Feedback :
Opens a lot of possibilities especially regarding builds:  you can achieve a very flexible way to build/package your docs from standard wiki formats.
Document model sometime a bit painful to update. Implementation sometime buggy. 

http://download.eclipse.org/releases/juno


h2.  compare

Scope : comparing
Intro : Comparing any kind of EMF model, semantic comparison versus serialization comparison. 
Tools  + framework
Example :
From a json representation (get then put) detect and analyse the changes done by the client.
Feedback:
New implementation, better design to achieve better scalability and usable in more contexts.
Just released, API tweaks still necessary and not yet validated by the community at large.
See EMF Compare's talk ! 
http://download.eclipse.org/modeling/emf/compare/updates/interim/2.1
 

h2. emfjson

http://ghillairet.github.com/p2/emfjson/snapshots/  XXX my custom build !

Intro : instances to Json, with (optional) typing information and support for JsonRef.

Json to instance!


Enable the inference of an Ecore from json instances (use with care)
Example :
Exposing a Json api from my Choco app server
Feedback :
?? 

h2.  cdo

Intro : distribute, share and concurrently work on your objects.
Generic api with DB backends
SCM like features : locking, versioning, branching
Example :
Concurrent and online editing of the choco model through generic UIs or dedicated clients.

Feedback :
powerful
requires you to re-generate your EMF model implementation. avoid legacy mode !
Fairly "transparent" api wise, but moving a single user app into the concurrent world is not going to be free.


http://download.eclipse.org/releases/juno
See CDO's talk !


h2.  gendoc

Intro : bridges any kind of EMF model into a doc format (word, libreoffice). The template is an exemplary doc with expressions which are getting substituted.

Example :
Choco's reports

Feedback :
Get the job done and in those cases you pretty much have no choice.
Silent in case of errors.
No tooling to write requests in Word which makes debugging hard.

http://topcased-gendoc.gforge.enseeiht.fr/releases/1.6.0/


h2. mongoemf

You get a mongo URI to persist resources into MongoDB (save/load)
You get to perform queries.

Example :

Could use it to provide web-scale for my choco app.
easy "scale out".
Business Intelligence.

 
Feedback :
active. In a good and in a bad way, you might have suprises with the APIs.
Completely OSGi-fied with services and so on.
Nicely documented.
If you need multi-objects transactions, go away !



h2. blueprints-emf

Intro : binds EMF with graph database. Blueprints is a common API for graph databases (neo4j and co).

Example :
Serializing my choco model in neo4j.
Ability to run complex queries on top of my huge dataset.
Web-sized scale out.


Feedback :
EMF fits nicely with graph databases.
Project is young but not much need to be done.
Exciting experiments.


https://github.com/ghillairet/blueprints-emf

h2. couch emf ?


h2. emf client platform

http://download.eclipse.org/emf-store/releases/latest

h2. texo

http://download.eclipse.org/modeling/emft/texo/updates/interim

Intro :
Just like EMF Core but in a Java-Enteprise world : JPA, 

Example :

Choco distributed app with RCP client, JPA + classic JEE stack.

Feedback :



h2. plugin sonar
 
https://github.com/Obeo/fr.obeo.sonar.plugin.regexfilefilter
Intro : We are using sonar to check our code quality over time. But we ends up with a lot of generated code and we want to see the violations we introduce, not those introduced by the code generator.
Example : 
check my choco app on Sonar. I don't want to check the generated code.  
Feedback :
Trivial yet useful.


h2. request view

http://download.eclipse.org/releases/juno

- prevayler emf ?


manque le feedback :
- emf gwt ?

en théorie rentre bien :
- modisco
- ariadne

- graphiti
- edapt ?
- query2 ?



h2. ocl - nouvelles API.

http://download.eclipse.org/releases/juno

bof :

h2. emfgeneratednot

https://emf-generated-not-view.eclipselabs.org.codespot.com/git/update/3.7/
/!\ pas installable sous linux .


h2. ariadne

 

- ecore mutator
(bof bof)
svn http://svn.codespot.com/a/eclipselabs.org/ecore-mutator/trunk/

- emf facet
Exploration de modèle.


- gmf
- egf
- papyrus
- atl
- emf-gwt ?
- xtext

tout petits :
https://github.com/ghillairet/couch-emf
https://github.com/mark-christiaens/EMF-Statistics-View


A étudier :
http://code.google.com/p/emf-fragments/